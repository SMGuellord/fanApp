// <auto-generated />
using System;
using FanApp.Common.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FanApp.Migrations
{
    [DbContext(typeof(FanAppContext))]
    partial class FanAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FanApp.Common.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Commentary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("FanApp.Common.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fistname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c400f7db-2037-4678-b85b-365bd5b85a17"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTime(2024, 5, 18, 11, 35, 7, 225, DateTimeKind.Local).AddTicks(7172),
                            DOB = new DateTime(2024, 5, 18, 11, 35, 7, 225, DateTimeKind.Local).AddTicks(7096),
                            Fistname = "Guellord",
                            Lastname = "Muhiya",
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTime(2024, 5, 18, 11, 35, 7, 225, DateTimeKind.Local).AddTicks(7173)
                        },
                        new
                        {
                            Id = new Guid("d5964359-22f8-4494-9b23-b1ee373febdb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTime(2024, 5, 18, 11, 35, 7, 225, DateTimeKind.Local).AddTicks(7177),
                            DOB = new DateTime(2024, 5, 18, 11, 35, 7, 225, DateTimeKind.Local).AddTicks(7176),
                            Fistname = "Leah",
                            Lastname = "Muhiya",
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTime(2024, 5, 18, 11, 35, 7, 225, DateTimeKind.Local).AddTicks(7177)
                        },
                        new
                        {
                            Id = new Guid("1c2c4ab1-f386-40b5-a07f-5a74517ea8a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTime(2024, 5, 18, 11, 35, 7, 225, DateTimeKind.Local).AddTicks(7192),
                            DOB = new DateTime(2024, 5, 18, 11, 35, 7, 225, DateTimeKind.Local).AddTicks(7192),
                            Fistname = "Gleah",
                            Lastname = "Muhiya",
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTime(2024, 5, 18, 11, 35, 7, 225, DateTimeKind.Local).AddTicks(7193)
                        });
                });

            modelBuilder.Entity("FanApp.Common.Models.Comment", b =>
                {
                    b.HasOne("FanApp.Common.Models.User", "CommentPoster")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentPoster");
                });

            modelBuilder.Entity("FanApp.Common.Models.User", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
